// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rendering doesn't show the start button when not started or startable 1`] = `
<View
  style={
    Object {
      "display": "flex",
      "flexDirection": "column",
      "width": "100%",
    }
  }
>
  <TextInput
    autoFocus={true}
    blurOnSubmit={false}
    onChangeText={[Function]}
    onSubmitEditing={[Function]}
    placeholder="Enter Player Name"
    placeholderTextColor="#aaa"
    returnKeyType="done"
    style={
      Object {
        "color": "#ccc",
        "paddingVertical": 10,
      }
    }
    value=""
  />
  <View
    style={
      Object {
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "space-around",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
          "marginRight": 2,
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#1B2836",
                "display": "flex",
                "justifyContent": "center",
                "padding": 10,
              },
              undefined,
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#fff",
                  "fontSize": 16,
                },
                Object {
                  "color": "#ccc",
                },
              ]
            }
          >
             
            Add Player
             
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`rendering doesn't show the start button when started 1`] = `
<View
  style={
    Object {
      "display": "flex",
      "flexDirection": "column",
      "width": "100%",
    }
  }
>
  <TextInput
    autoFocus={true}
    blurOnSubmit={false}
    onChangeText={[Function]}
    onSubmitEditing={[Function]}
    placeholder="Enter Player Name"
    placeholderTextColor="#aaa"
    returnKeyType="done"
    style={
      Object {
        "color": "#ccc",
        "paddingVertical": 10,
      }
    }
    value=""
  />
  <View
    style={
      Object {
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "space-around",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
          "marginRight": 2,
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#1B2836",
                "display": "flex",
                "justifyContent": "center",
                "padding": 10,
              },
              undefined,
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#fff",
                  "fontSize": 16,
                },
                Object {
                  "color": "#ccc",
                },
              ]
            }
          >
             
            Add Player
             
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`rendering shows the start button when startable but not started 1`] = `
<View
  style={
    Object {
      "display": "flex",
      "flexDirection": "column",
      "width": "100%",
    }
  }
>
  <TextInput
    autoFocus={true}
    blurOnSubmit={false}
    onChangeText={[Function]}
    onSubmitEditing={[Function]}
    placeholder="Enter Player Name"
    placeholderTextColor="#aaa"
    returnKeyType="done"
    style={
      Object {
        "color": "#ccc",
        "paddingVertical": 10,
      }
    }
    value=""
  />
  <View
    style={
      Object {
        "display": "flex",
        "flexDirection": "row",
        "justifyContent": "space-around",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
          "marginRight": 2,
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#1B2836",
                "display": "flex",
                "justifyContent": "center",
                "padding": 10,
              },
              undefined,
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#fff",
                  "fontSize": 16,
                },
                Object {
                  "color": "#ccc",
                },
              ]
            }
          >
             
            Add Player
             
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "marginLeft": 2,
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#1B2836",
                "display": "flex",
                "justifyContent": "center",
                "padding": 10,
              },
              undefined,
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#fff",
                  "fontSize": 16,
                },
                Object {
                  "color": "#ccc",
                },
              ]
            }
          >
             
            Start Game
             
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
